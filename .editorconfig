root = true

[*]

indent_style = tab
indent_size = 4
tab_width = 4
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = false
insert_final_newline = true

[*.cs]
dotnet_diagnostic.IDE0055.severity = none

dotnet_diagnostic.IDE0022.severity = none

dotnet_diagnostic.IDE0021.severity = none

dotnet_diagnostic.IDE0058.severity = none

dotnet_diagnostic.IDE0023.severity = none

dotnet_diagnostic.IDE0061.severity = none

# Options
roslynator_accessibility_modifiers = explicit
# Applicable to: rcs1018

roslynator_accessor_braces_style = single_line_when_expression_is_on_single_line
# Default: multi_line
# Applicable to: rcs0020

roslynator_array_creation_type_style = implicit_when_type_is_obvious
# Applicable to: rcs1014

roslynator_arrow_token_new_line = before
# Applicable to: rcs0032

roslynator_binary_operator_new_line = before
# Applicable to: rcs0027

roslynator_blank_line_between_closing_brace_and_switch_section = false
# Applicable to: rcs0014, rcs1036

roslynator_blank_line_between_single_line_accessors = false
# Applicable to: rcs0011

roslynator_blank_line_between_using_directives = never
# Applicable to: rcs0015

roslynator_block_braces_style = single_line_when_empty
# Default: multi_line
# Applicable to: rcs0021

roslynator_body_style = expression
# Applicable to: rcs1016

roslynator_conditional_operator_condition_parentheses_style = omit
# Applicable to: rcs1051

roslynator_conditional_operator_new_line = before
# Applicable to: rcs0028

roslynator_configure_await = true
# Applicable to: rcs1090

roslynator_empty_string_style = field
# Applicable to: rcs1078

roslynator_enum_has_flag_style = method
# Applicable to: rcs1096

roslynator_equals_token_new_line = after
# Applicable to: rcs0052

roslynator_max_line_length = 190
# Default: 140
# Applicable to: rcs0056

roslynator_new_line_at_end_of_file = true
# Applicable to: rcs0058

roslynator_new_line_before_while_in_do_statement = false
# Applicable to: rcs0051

roslynator_null_conditional_operator_new_line = after
# Applicable to: rcs0059

roslynator_null_check_style = pattern_matching
# Applicable to: rcs1248

roslynator_object_creation_parentheses_style = omit
# Applicable to: rcs1050

roslynator_object_creation_type_style = implicit_when_type_is_obvious
# Applicable to: rcs1250

roslynator_prefix_field_identifier_with_underscore = true

roslynator_suppress_unity_script_methods = true
# Applicable to: rcs1213

roslynator_use_anonymous_function_or_method_group = method_group
# Applicable to: rcs1207

roslynator_use_block_body_when_declaration_spans_over_multiple_lines = false
# Applicable to: rcs1016

roslynator_use_block_body_when_expression_spans_over_multiple_lines = false
# Applicable to: rcs1016

roslynator_use_var_instead_of_implicit_object_creation = false
# Applicable to: rcs1250


# Analyzers

# Add blank line after embedded statement
dotnet_diagnostic.rcs0001.severity = none

# Add blank line after #region
dotnet_diagnostic.rcs0002.severity = none

# Add blank line after using directive list
dotnet_diagnostic.rcs0003.severity = suggestion

# Add blank line before #endregion
dotnet_diagnostic.rcs0005.severity = none

# Add blank line before using directive list
dotnet_diagnostic.rcs0006.severity = none

# Add blank line between accessors
dotnet_diagnostic.rcs0007.severity = none

# Add blank line between closing brace and next statement
dotnet_diagnostic.rcs0008.severity = none

# Add blank line between declaration and documentation comment
dotnet_diagnostic.rcs0009.severity = none

# Add blank line between declarations
dotnet_diagnostic.rcs0010.severity = none

# Add/remove blank line between single-line accessors
dotnet_diagnostic.rcs0011.severity = none
# Options: roslynator_blank_line_between_single_line_accessors

# Add blank line between single-line declarations
dotnet_diagnostic.rcs0012.severity = none

# Add blank line between single-line declarations of different kind
dotnet_diagnostic.rcs0013.severity = none

# Add blank line between switch sections
dotnet_diagnostic.rcs0014.severity = none
# Options: roslynator_blank_line_between_closing_brace_and_switch_section

# Add/remove blank line between using directives
dotnet_diagnostic.rcs0015.severity = suggestion
# Options: roslynator_blank_line_between_using_directives

# Put attribute list on its own line
dotnet_diagnostic.rcs0016.severity = none

# Format accessor's braces on a single line or multiple lines
dotnet_diagnostic.rcs0020.severity = none
# Options: roslynator_accessor_braces_style

# Format block's braces on a single line or multiple lines
dotnet_diagnostic.rcs0021.severity = none
# Options: roslynator_block_braces_style

# Add new line after opening brace of empty block
dotnet_diagnostic.rcs0022.severity = none

# Format type declaration's braces
dotnet_diagnostic.rcs0023.severity = none

# Add new line after switch label
dotnet_diagnostic.rcs0024.severity = none

# Put full accessor on its own line
dotnet_diagnostic.rcs0025.severity = none

# Place new line after/before binary operator
dotnet_diagnostic.rcs0027.severity = suggestion
# Options: roslynator_binary_operator_new_line

# Place new line after/before '?:' operator
dotnet_diagnostic.rcs0028.severity = suggestion
# Options: roslynator_conditional_operator_new_line

# Put constructor initializer on its own line
dotnet_diagnostic.rcs0029.severity = suggestion

# Add new line before embedded statement
dotnet_diagnostic.rcs0030.severity = none

# Add new line before enum member
dotnet_diagnostic.rcs0031.severity = suggestion

# Place new line after/before arrow token
dotnet_diagnostic.rcs0032.severity = suggestion
# Options: roslynator_arrow_token_new_line

# Add new line before statement
dotnet_diagnostic.rcs0033.severity = suggestion

# Add new line before type parameter constraint
dotnet_diagnostic.rcs0034.severity = suggestion

# Remove blank line between single-line declarations of same kind
dotnet_diagnostic.rcs0036.severity = suggestion

# Remove blank line between using directives with same root namespace
dotnet_diagnostic.rcs0038.severity = suggestion

# Remove new line before base list
dotnet_diagnostic.rcs0039.severity = suggestion

# Remove new line between 'if' keyword and 'else' keyword
dotnet_diagnostic.rcs0041.severity = suggestion

# Put auto-accessors on a single line
dotnet_diagnostic.rcs0042.severity = suggestion

# Format accessor's braces on a single line when expression is on single line
dotnet_diagnostic.rcs0043.severity = suggestion

# Use carriage return + linefeed as new line
dotnet_diagnostic.rcs0044.severity = none

# Use linefeed as new line
dotnet_diagnostic.rcs0045.severity = suggestion

# Use spaces instead of tab
dotnet_diagnostic.rcs0046.severity = none

# [deprecated] Wrap and indent each node in list
dotnet_diagnostic.rcs0047.severity = none

# Put initializer on a single line
dotnet_diagnostic.rcs0048.severity = none

# Add blank line after top comment
dotnet_diagnostic.rcs0049.severity = none

# Add blank line before top declaration
dotnet_diagnostic.rcs0050.severity = none

# Add/remove new line before 'while' in 'do' statement
dotnet_diagnostic.rcs0051.severity = suggestion
# Options: roslynator_new_line_before_while_in_do_statement

# Place new line after/before equals token
dotnet_diagnostic.rcs0052.severity = suggestion
# Options: roslynator_equals_token_new_line

# Fix formatting of a list
dotnet_diagnostic.rcs0053.severity = suggestion

# Fix formatting of a call chain
dotnet_diagnostic.rcs0054.severity = suggestion

# Fix formatting of a binary expression chain
dotnet_diagnostic.rcs0055.severity = suggestion

# A line is too long
dotnet_diagnostic.rcs0056.severity = suggestion
# Options: roslynator_max_line_length

# Normalize whitespace at the beginning of a file
dotnet_diagnostic.rcs0057.severity = suggestion

# Normalize whitespace at the end of a file
dotnet_diagnostic.rcs0058.severity = suggestion
# Options: roslynator_new_line_at_end_of_file

# Place new line after/before null-conditional operator
dotnet_diagnostic.rcs0059.severity = suggestion
# Options: roslynator_null_conditional_operator_new_line

# Add braces (when expression spans over multiple lines)
dotnet_diagnostic.rcs1001.severity = suggestion

# Remove braces
dotnet_diagnostic.rcs1002.severity = none

# Add braces to if-else (when expression spans over multiple lines)
dotnet_diagnostic.rcs1003.severity = suggestion

# Remove braces from if-else
dotnet_diagnostic.rcs1004.severity = none

# Simplify nested using statement
dotnet_diagnostic.rcs1005.severity = suggestion

# Merge 'else' with nested 'if'
dotnet_diagnostic.rcs1006.severity = suggestion

# Add braces
dotnet_diagnostic.rcs1007.severity = suggestion

# Use explicit type instead of 'var' (when the type is not obvious)
dotnet_diagnostic.rcs1008.severity = suggestion

# Use explicit type instead of 'var' (foreach variable)
dotnet_diagnostic.rcs1009.severity = suggestion

# Use 'var' instead of explicit type (when the type is obvious)
dotnet_diagnostic.rcs1010.severity = none

# Use explicit type instead of 'var' (when the type is obvious)
dotnet_diagnostic.rcs1012.severity = suggestion

# Use predefined type
dotnet_diagnostic.rcs1013.severity = suggestion

# Use explicitly/implicitly typed array
dotnet_diagnostic.rcs1014.severity = suggestion
# Options: roslynator_array_creation_type_style

# Use nameof operator
dotnet_diagnostic.rcs1015.severity = warning

# Use block body or expression body
dotnet_diagnostic.rcs1016.severity = none
# Options: roslynator_body_style, roslynator_use_block_body_when_declaration_spans_over_multiple_lines, roslynator_use_block_body_when_expression_spans_over_multiple_lines

# Add/remove accessibility modifiers
dotnet_diagnostic.rcs1018.severity = suggestion
# Options: roslynator_accessibility_modifiers

# Order modifiers
dotnet_diagnostic.rcs1019.severity = suggestion

# Simplify Nullable<T> to T?
dotnet_diagnostic.rcs1020.severity = suggestion

# Convert lambda expression body to expression body
dotnet_diagnostic.rcs1021.severity = suggestion

# Remove unnecessary braces
dotnet_diagnostic.rcs1031.severity = suggestion

# Remove redundant parentheses
dotnet_diagnostic.rcs1032.severity = suggestion

# Remove redundant boolean literal
dotnet_diagnostic.rcs1033.severity = suggestion

# Remove redundant 'sealed' modifier
dotnet_diagnostic.rcs1034.severity = suggestion

# Remove redundant comma in initializer
dotnet_diagnostic.rcs1035.severity = suggestion

# Remove unnecessary blank line
dotnet_diagnostic.rcs1036.severity = suggestion
# Options: roslynator_blank_line_between_closing_brace_and_switch_section

# Remove trailing white-space
dotnet_diagnostic.rcs1037.severity = none

# Remove empty statement
dotnet_diagnostic.rcs1038.severity = suggestion

# Remove argument list from attribute
dotnet_diagnostic.rcs1039.severity = suggestion

# Remove empty 'else' clause
dotnet_diagnostic.rcs1040.severity = suggestion

# Remove empty initializer
dotnet_diagnostic.rcs1041.severity = suggestion

# Remove enum default underlying type
dotnet_diagnostic.rcs1042.severity = suggestion

# Remove 'partial' modifier from type with a single part
dotnet_diagnostic.rcs1043.severity = suggestion

# Remove original exception from throw statement
dotnet_diagnostic.rcs1044.severity = warning

# Asynchronous method name should end with 'Async'
dotnet_diagnostic.rcs1046.severity = none

# Non-asynchronous method name should not end with 'Async'
dotnet_diagnostic.rcs1047.severity = suggestion

# Use lambda expression instead of anonymous method
dotnet_diagnostic.rcs1048.severity = suggestion

# Simplify boolean comparison
dotnet_diagnostic.rcs1049.severity = suggestion

# Include/omit parentheses when creating new object
dotnet_diagnostic.rcs1050.severity = suggestion
# Options: roslynator_object_creation_parentheses_style

# Add/remove parentheses from condition in conditional operator
dotnet_diagnostic.rcs1051.severity = suggestion
# Options: roslynator_conditional_operator_condition_parentheses_style

# Declare each attribute separately
dotnet_diagnostic.rcs1052.severity = none

# Avoid semicolon at the end of declaration
dotnet_diagnostic.rcs1055.severity = suggestion

# Avoid usage of using alias directive
dotnet_diagnostic.rcs1056.severity = none

# Use compound assignment
dotnet_diagnostic.rcs1058.severity = suggestion

# Avoid locking on publicly accessible instance
dotnet_diagnostic.rcs1059.severity = warning

# Declare each type in separate file
dotnet_diagnostic.rcs1060.severity = suggestion

# Merge 'if' with nested 'if'
dotnet_diagnostic.rcs1061.severity = suggestion

# Avoid usage of do statement to create an infinite loop
dotnet_diagnostic.rcs1063.severity = suggestion

# Avoid usage of for statement to create an infinite loop
dotnet_diagnostic.rcs1064.severity = suggestion

# Avoid usage of while statement to create an infinite loop
dotnet_diagnostic.rcs1065.severity = suggestion

# Remove empty 'finally' clause
dotnet_diagnostic.rcs1066.severity = suggestion

# Simplify logical negation
dotnet_diagnostic.rcs1068.severity = suggestion

# Remove unnecessary case label
dotnet_diagnostic.rcs1069.severity = suggestion

# Remove redundant default switch section
dotnet_diagnostic.rcs1070.severity = suggestion

# Remove redundant base constructor call
dotnet_diagnostic.rcs1071.severity = suggestion

# Remove empty namespace declaration
dotnet_diagnostic.rcs1072.severity = suggestion

# Convert 'if' to 'return' statement
dotnet_diagnostic.rcs1073.severity = suggestion

# Remove redundant constructor
dotnet_diagnostic.rcs1074.severity = suggestion

# Avoid empty catch clause that catches System.Exception
dotnet_diagnostic.rcs1075.severity = warning

# Optimize LINQ method call
dotnet_diagnostic.rcs1077.severity = suggestion

# Use "" or 'string.Empty'
dotnet_diagnostic.rcs1078.severity = suggestion
# Options: roslynator_empty_string_style

# Throwing of new NotImplementedException
dotnet_diagnostic.rcs1079.severity = warning

# Use 'Count/Length' property instead of 'Any' method
dotnet_diagnostic.rcs1080.severity = suggestion

# Split variable declaration
dotnet_diagnostic.rcs1081.severity = none

# Use coalesce expression instead of conditional expression
dotnet_diagnostic.rcs1084.severity = suggestion

# Use auto-implemented property
dotnet_diagnostic.rcs1085.severity = suggestion

# Use --/++ operator instead of assignment
dotnet_diagnostic.rcs1089.severity = suggestion

# Add/remove 'ConfigureAwait(false)' call
dotnet_diagnostic.rcs1090.severity = suggestion
# Options: roslynator_configure_await

# Remove empty region
dotnet_diagnostic.rcs1091.severity = suggestion

# Remove file with no code
dotnet_diagnostic.rcs1093.severity = suggestion

# Declare using directive on top level
dotnet_diagnostic.rcs1094.severity = none

# Use 'HasFlag' method or bitwise operator
dotnet_diagnostic.rcs1096.severity = suggestion
# Options: roslynator_enum_has_flag_style

# Remove redundant 'ToString' call
dotnet_diagnostic.rcs1097.severity = suggestion

# Constant values should be placed on right side of comparisons
dotnet_diagnostic.rcs1098.severity = suggestion

# Default label should be the last label in a switch section
dotnet_diagnostic.rcs1099.severity = suggestion

# Format documentation summary on a single line
dotnet_diagnostic.rcs1100.severity = none

# Format documentation summary on multiple lines
dotnet_diagnostic.rcs1101.severity = suggestion

# Make class static
dotnet_diagnostic.rcs1102.severity = warning

# Convert 'if' to assignment
dotnet_diagnostic.rcs1103.severity = suggestion

# Simplify conditional expression
dotnet_diagnostic.rcs1104.severity = suggestion

# Unnecessary interpolation
dotnet_diagnostic.rcs1105.severity = suggestion

# Remove empty destructor
dotnet_diagnostic.rcs1106.severity = suggestion

# Remove redundant 'ToCharArray' call
dotnet_diagnostic.rcs1107.severity = suggestion

# Add 'static' modifier to all partial class declarations
dotnet_diagnostic.rcs1108.severity = suggestion

# Declare type inside namespace
dotnet_diagnostic.rcs1110.severity = suggestion

# Add braces to switch section with multiple statements
dotnet_diagnostic.rcs1111.severity = suggestion

# Combine 'Enumerable.Where' method chain
dotnet_diagnostic.rcs1112.severity = suggestion

# Use 'string.IsNullOrEmpty' method
dotnet_diagnostic.rcs1113.severity = suggestion

# Remove redundant delegate creation
dotnet_diagnostic.rcs1114.severity = suggestion

# Mark local variable as const
dotnet_diagnostic.rcs1118.severity = suggestion

# Add parentheses when necessary
dotnet_diagnostic.rcs1123.severity = suggestion

# Inline local variable
dotnet_diagnostic.rcs1124.severity = none

# Add braces to if-else
dotnet_diagnostic.rcs1126.severity = suggestion

# Use coalesce expression
dotnet_diagnostic.rcs1128.severity = suggestion

# Remove redundant field initialization
dotnet_diagnostic.rcs1129.severity = suggestion

# Bitwise operation on enum without Flags attribute
dotnet_diagnostic.rcs1130.severity = suggestion

# Remove redundant overriding member
dotnet_diagnostic.rcs1132.severity = suggestion

# Remove redundant Dispose/Close call
dotnet_diagnostic.rcs1133.severity = suggestion

# Remove redundant statement
dotnet_diagnostic.rcs1134.severity = suggestion

# Declare enum member with zero value (when enum has FlagsAttribute)
dotnet_diagnostic.rcs1135.severity = suggestion

# Merge switch sections with equivalent content
dotnet_diagnostic.rcs1136.severity = suggestion

# Add summary to documentation comment
dotnet_diagnostic.rcs1138.severity = warning

# Add summary element to documentation comment
dotnet_diagnostic.rcs1139.severity = warning

# Add exception to documentation comment
dotnet_diagnostic.rcs1140.severity = suggestion

# Add 'param' element to documentation comment
dotnet_diagnostic.rcs1141.severity = suggestion

# Add 'typeparam' element to documentation comment
dotnet_diagnostic.rcs1142.severity = suggestion

# Simplify coalesce expression
dotnet_diagnostic.rcs1143.severity = suggestion

# Remove redundant 'as' operator
dotnet_diagnostic.rcs1145.severity = suggestion

# Use conditional access
dotnet_diagnostic.rcs1146.severity = suggestion

# Remove redundant cast
dotnet_diagnostic.rcs1151.severity = suggestion

# Sort enum members
dotnet_diagnostic.rcs1154.severity = suggestion

# Use StringComparison when comparing strings
dotnet_diagnostic.rcs1155.severity = warning

# Use string.Length instead of comparison with empty string
dotnet_diagnostic.rcs1156.severity = suggestion

# Composite enum value contains undefined flag
dotnet_diagnostic.rcs1157.severity = suggestion

# Static member in generic type should use a type parameter
dotnet_diagnostic.rcs1158.severity = suggestion

# Use EventHandler<T>
dotnet_diagnostic.rcs1159.severity = suggestion

# Abstract type should not have public constructors
dotnet_diagnostic.rcs1160.severity = suggestion

# Enum should declare explicit values
dotnet_diagnostic.rcs1161.severity = none

# Avoid chain of assignments
dotnet_diagnostic.rcs1162.severity = none

# Unused parameter
dotnet_diagnostic.rcs1163.severity = suggestion

# Unused type parameter
dotnet_diagnostic.rcs1164.severity = suggestion

# Unconstrained type parameter checked for null
dotnet_diagnostic.rcs1165.severity = suggestion

# Value type object is never equal to null
dotnet_diagnostic.rcs1166.severity = suggestion

# Parameter name differs from base name
dotnet_diagnostic.rcs1168.severity = suggestion

# Make field read-only
dotnet_diagnostic.rcs1169.severity = suggestion

# Use read-only auto-implemented property
dotnet_diagnostic.rcs1170.severity = suggestion

# Simplify lazy initialization
dotnet_diagnostic.rcs1171.severity = suggestion

# Use 'is' operator instead of 'as' operator
dotnet_diagnostic.rcs1172.severity = warning

# Use coalesce expression instead of 'if'
dotnet_diagnostic.rcs1173.severity = suggestion

# Remove redundant async/await
dotnet_diagnostic.rcs1174.severity = suggestion

# Unused this parameter
dotnet_diagnostic.rcs1175.severity = suggestion

# Use 'var' instead of explicit type (when the type is not obvious)
dotnet_diagnostic.rcs1176.severity = none

# Use 'var' instead of explicit type (in foreach)
dotnet_diagnostic.rcs1177.severity = none

# Unnecessary assignment
dotnet_diagnostic.rcs1179.severity = suggestion

# Inline lazy initialization
dotnet_diagnostic.rcs1180.severity = suggestion

# Convert comment to documentation comment
dotnet_diagnostic.rcs1181.severity = none

# Remove redundant base interface
dotnet_diagnostic.rcs1182.severity = suggestion

# Use Regex instance instead of static method
dotnet_diagnostic.rcs1186.severity = suggestion

# Use constant instead of field
dotnet_diagnostic.rcs1187.severity = suggestion

# Remove redundant auto-property initialization
dotnet_diagnostic.rcs1188.severity = suggestion

# Add or remove region name
dotnet_diagnostic.rcs1189.severity = suggestion

# Join string expressions
dotnet_diagnostic.rcs1190.severity = suggestion

# Declare enum value as combination of names
dotnet_diagnostic.rcs1191.severity = suggestion

# Unnecessary usage of verbatim string literal
dotnet_diagnostic.rcs1192.severity = suggestion

# Overriding member should not change 'params' modifier
dotnet_diagnostic.rcs1193.severity = warning

# Implement exception constructors
dotnet_diagnostic.rcs1194.severity = warning

# Use ^ operator
dotnet_diagnostic.rcs1195.severity = suggestion

# Call extension method as instance method
dotnet_diagnostic.rcs1196.severity = suggestion

# Optimize StringBuilder.Append/AppendLine call
dotnet_diagnostic.rcs1197.severity = suggestion

# Avoid unnecessary boxing of value type
dotnet_diagnostic.rcs1198.severity = suggestion

# Unnecessary null check
dotnet_diagnostic.rcs1199.severity = suggestion

# Call 'Enumerable.ThenBy' instead of 'Enumerable.OrderBy'
dotnet_diagnostic.rcs1200.severity = suggestion

# Use method chaining
dotnet_diagnostic.rcs1201.severity = suggestion

# Avoid NullReferenceException
dotnet_diagnostic.rcs1202.severity = suggestion

# Use AttributeUsageAttribute
dotnet_diagnostic.rcs1203.severity = warning

# Use EventArgs.Empty
dotnet_diagnostic.rcs1204.severity = suggestion

# Return completed task instead of returning null
dotnet_diagnostic.rcs1210.severity = warning

# Remove unnecessary 'else'
dotnet_diagnostic.rcs1211.severity = suggestion

# Remove redundant assignment
dotnet_diagnostic.rcs1212.severity = suggestion

# Remove unused member declaration
dotnet_diagnostic.rcs1213.severity = suggestion
# Options: roslynator_suppress_unity_script_methods

# Unnecessary interpolated string
dotnet_diagnostic.rcs1214.severity = suggestion

# Expression is always equal to true/false
dotnet_diagnostic.rcs1215.severity = warning

# Unnecessary unsafe context
dotnet_diagnostic.rcs1216.severity = suggestion

# Convert interpolated string to concatenation
dotnet_diagnostic.rcs1217.severity = suggestion

# Simplify code branching
dotnet_diagnostic.rcs1218.severity = suggestion

# Use pattern matching instead of combination of 'is' operator and cast operator
dotnet_diagnostic.rcs1220.severity = suggestion

# Use pattern matching instead of combination of 'as' operator and null check
dotnet_diagnostic.rcs1221.severity = suggestion

# Merge preprocessor directives
dotnet_diagnostic.rcs1222.severity = suggestion

# Mark publicly visible type with DebuggerDisplay attribute
dotnet_diagnostic.rcs1223.severity = none

# Make method an extension method
dotnet_diagnostic.rcs1224.severity = suggestion

# Make class sealed
dotnet_diagnostic.rcs1225.severity = suggestion

# Add paragraph to documentation comment
dotnet_diagnostic.rcs1226.severity = suggestion

# Validate arguments correctly
dotnet_diagnostic.rcs1227.severity = suggestion

# Unused element in documentation comment
dotnet_diagnostic.rcs1228.severity = suggestion

# Use async/await when necessary
dotnet_diagnostic.rcs1229.severity = suggestion

# Unnecessary explicit use of enumerator
dotnet_diagnostic.rcs1230.severity = suggestion

# Make parameter ref read-only
dotnet_diagnostic.rcs1231.severity = suggestion

# Implement non-generic counterpart
dotnet_diagnostic.rcs1241.severity = suggestion

# Do not pass non-read-only struct by read-only reference
dotnet_diagnostic.rcs1242.severity = warning

# Duplicate word in a comment
dotnet_diagnostic.rcs1243.severity = suggestion

# Simplify 'default' expression
dotnet_diagnostic.rcs1244.severity = none

# Use element access
dotnet_diagnostic.rcs1246.severity = suggestion

# Fix documentation comment tag
dotnet_diagnostic.rcs1247.severity = suggestion

# Normalize null check
dotnet_diagnostic.rcs1248.severity = suggestion
# Options: roslynator_null_check_style

# Unnecessary null-forgiving operator
dotnet_diagnostic.rcs1249.severity = suggestion

# Use implicit/explicit object creation
dotnet_diagnostic.rcs1250.severity = suggestion
# Options: roslynator_object_creation_type_style, roslynator_use_var_instead_of_implicit_object_creation

# Use pattern matching
dotnet_diagnostic.rcs9001.severity = suggestion

# Use property SyntaxNode.SpanStart
dotnet_diagnostic.rcs9002.severity = suggestion

dotnet_diagnostic.rcs9007.severity = warning

# Call 'Last' instead of using []
dotnet_diagnostic.rcs9008.severity = suggestion

# Unknown language name
dotnet_diagnostic.rcs9009.severity = warning

# Specify ExportCodeRefactoringProviderAttribute.Name
dotnet_diagnostic.rcs9010.severity = suggestion

# Specify ExportCodeFixProviderAttribute.Name
dotnet_diagnostic.rcs9011.severity = suggestion
